"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/compliance/status/route";
exports.ids = ["app/api/compliance/status/route"];
exports.modules = {

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcompliance%2Fstatus%2Froute&page=%2Fapi%2Fcompliance%2Fstatus%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcompliance%2Fstatus%2Froute.ts&appDir=C%3A%5CUsers%5Crdear%5CDownloads%5Cice_fleet_platform%5Capp%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Crdear%5CDownloads%5Cice_fleet_platform%5Capp&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcompliance%2Fstatus%2Froute&page=%2Fapi%2Fcompliance%2Fstatus%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcompliance%2Fstatus%2Froute.ts&appDir=C%3A%5CUsers%5Crdear%5CDownloads%5Cice_fleet_platform%5Capp%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Crdear%5CDownloads%5Cice_fleet_platform%5Capp&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_rdear_Downloads_ice_fleet_platform_app_app_api_compliance_status_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/compliance/status/route.ts */ \"(rsc)/./app/api/compliance/status/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/compliance/status/route\",\n        pathname: \"/api/compliance/status\",\n        filename: \"route\",\n        bundlePath: \"app/api/compliance/status/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\rdear\\\\Downloads\\\\ice_fleet_platform\\\\app\\\\app\\\\api\\\\compliance\\\\status\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_rdear_Downloads_ice_fleet_platform_app_app_api_compliance_status_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/compliance/status/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZjb21wbGlhbmNlJTJGc3RhdHVzJTJGcm91dGUmcGFnZT0lMkZhcGklMkZjb21wbGlhbmNlJTJGc3RhdHVzJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGY29tcGxpYW5jZSUyRnN0YXR1cyUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNyZGVhciU1Q0Rvd25sb2FkcyU1Q2ljZV9mbGVldF9wbGF0Zm9ybSU1Q2FwcCU1Q2FwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9QyUzQSU1Q1VzZXJzJTVDcmRlYXIlNUNEb3dubG9hZHMlNUNpY2VfZmxlZXRfcGxhdGZvcm0lNUNhcHAmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQzRDO0FBQ3pIO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnSEFBbUI7QUFDM0M7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsaUVBQWlFO0FBQ3pFO0FBQ0E7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDdUg7O0FBRXZIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYXBwLz84OTk1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIkM6XFxcXFVzZXJzXFxcXHJkZWFyXFxcXERvd25sb2Fkc1xcXFxpY2VfZmxlZXRfcGxhdGZvcm1cXFxcYXBwXFxcXGFwcFxcXFxhcGlcXFxcY29tcGxpYW5jZVxcXFxzdGF0dXNcXFxccm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2NvbXBsaWFuY2Uvc3RhdHVzL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvY29tcGxpYW5jZS9zdGF0dXNcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL2NvbXBsaWFuY2Uvc3RhdHVzL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiQzpcXFxcVXNlcnNcXFxccmRlYXJcXFxcRG93bmxvYWRzXFxcXGljZV9mbGVldF9wbGF0Zm9ybVxcXFxhcHBcXFxcYXBwXFxcXGFwaVxcXFxjb21wbGlhbmNlXFxcXHN0YXR1c1xcXFxyb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvY29tcGxpYW5jZS9zdGF0dXMvcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcompliance%2Fstatus%2Froute&page=%2Fapi%2Fcompliance%2Fstatus%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcompliance%2Fstatus%2Froute.ts&appDir=C%3A%5CUsers%5Crdear%5CDownloads%5Cice_fleet_platform%5Capp%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Crdear%5CDownloads%5Cice_fleet_platform%5Capp&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/compliance/status/route.ts":
/*!********************************************!*\
  !*** ./app/api/compliance/status/route.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   dynamic: () => (/* binding */ dynamic)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_db__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/db */ \"(rsc)/./lib/db.ts\");\n/* harmony import */ var _lib_compliance_compliance_tracker__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/compliance/compliance-tracker */ \"(rsc)/./lib/compliance/compliance-tracker.ts\");\n\n\n\nconst dynamic = \"force-dynamic\";\nasync function GET(request) {\n    try {\n        const { searchParams } = new URL(request.url);\n        const assetId = searchParams.get(\"assetId\");\n        const assetType = searchParams.get(\"assetType\");\n        const detailed = searchParams.get(\"detailed\") === \"true\";\n        if (assetId && assetType) {\n            // Get status for specific asset\n            return getAssetComplianceStatus(assetId, assetType, detailed);\n        } else {\n            // Get overall fleet compliance status\n            return getFleetComplianceStatus(detailed);\n        }\n    } catch (error) {\n        console.error(\"Error fetching compliance status:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to fetch compliance status\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function getFleetComplianceStatus(detailed) {\n    // Fetch all fleet data\n    const [vehicles, trailers, drivers, documents] = await Promise.all([\n        _lib_db__WEBPACK_IMPORTED_MODULE_1__.prisma.vehicle.findMany({\n            where: {\n                status: {\n                    not: \"RETIRED\"\n                }\n            },\n            select: {\n                id: true,\n                make: true,\n                model: true,\n                licensePlate: true,\n                province: true,\n                status: true\n            }\n        }),\n        _lib_db__WEBPACK_IMPORTED_MODULE_1__.prisma.trailer.findMany({\n            where: {\n                status: {\n                    not: \"RETIRED\"\n                }\n            },\n            select: {\n                id: true,\n                type: true,\n                serialNumber: true,\n                province: true,\n                status: true\n            }\n        }),\n        _lib_db__WEBPACK_IMPORTED_MODULE_1__.prisma.driver.findMany({\n            select: {\n                id: true,\n                employeeId: true,\n                firstName: true,\n                lastName: true,\n                licenseNumber: true,\n                licenseClass: true,\n                licenseExpiry: true,\n                status: true,\n                province: true\n            }\n        }),\n        _lib_db__WEBPACK_IMPORTED_MODULE_1__.prisma.complianceDocument.findMany({\n            include: {\n                vehicle: {\n                    select: {\n                        id: true,\n                        make: true,\n                        model: true,\n                        licensePlate: true,\n                        province: true\n                    }\n                },\n                trailer: {\n                    select: {\n                        id: true,\n                        type: true,\n                        serialNumber: true,\n                        province: true\n                    }\n                }\n            }\n        })\n    ]);\n    const complianceStatus = (0,_lib_compliance_compliance_tracker__WEBPACK_IMPORTED_MODULE_2__.calculateComplianceStatus)(vehicles, trailers, drivers, documents);\n    if (!detailed) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(complianceStatus);\n    }\n    // Add detailed breakdown by province and asset type\n    const provinceBreakdown = new Map();\n    const assetTypeBreakdown = {\n        vehicles: {\n            total: vehicles.length,\n            compliant: 0,\n            warning: 0,\n            critical: 0\n        },\n        trailers: {\n            total: trailers.length,\n            compliant: 0,\n            warning: 0,\n            critical: 0\n        },\n        drivers: {\n            total: drivers.filter((d)=>d.status === \"ACTIVE\").length,\n            compliant: 0,\n            warning: 0,\n            critical: 0\n        }\n    };\n    // Calculate province-specific compliance\n    const allProvinces = [\n        ...new Set([\n            ...vehicles.map((v)=>v.province),\n            ...trailers.map((t)=>t.province),\n            ...drivers.map((d)=>d.province)\n        ])\n    ];\n    for (const province of allProvinces){\n        const provinceVehicles = vehicles.filter((v)=>v.province === province);\n        const provinceTrailers = trailers.filter((t)=>t.province === province);\n        const provinceDrivers = drivers.filter((d)=>d.province === province);\n        const provinceDocuments = documents.filter((d)=>d.vehicle && d.vehicle.province === province || d.trailer && d.trailer.province === province);\n        const provinceStatus = (0,_lib_compliance_compliance_tracker__WEBPACK_IMPORTED_MODULE_2__.calculateComplianceStatus)(provinceVehicles, provinceTrailers, provinceDrivers, provinceDocuments);\n        provinceBreakdown.set(province, {\n            province,\n            status: provinceStatus,\n            requirements: _lib_compliance_compliance_tracker__WEBPACK_IMPORTED_MODULE_2__.PROVINCIAL_REQUIREMENTS[province] || []\n        });\n    }\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n        ...complianceStatus,\n        detailed: {\n            provinceBreakdown: Object.fromEntries(provinceBreakdown),\n            assetTypeBreakdown\n        }\n    });\n}\nasync function getAssetComplianceStatus(assetId, assetType, detailed) {\n    let asset = null;\n    let documents = [];\n    switch(assetType){\n        case \"VEHICLE\":\n            asset = await _lib_db__WEBPACK_IMPORTED_MODULE_1__.prisma.vehicle.findUnique({\n                where: {\n                    id: assetId\n                },\n                include: {\n                    complianceDocuments: {\n                        orderBy: {\n                            expiryDate: \"asc\"\n                        }\n                    }\n                }\n            });\n            documents = asset?.complianceDocuments || [];\n            break;\n        case \"TRAILER\":\n            asset = await _lib_db__WEBPACK_IMPORTED_MODULE_1__.prisma.trailer.findUnique({\n                where: {\n                    id: assetId\n                },\n                include: {\n                    complianceDocuments: {\n                        orderBy: {\n                            expiryDate: \"asc\"\n                        }\n                    }\n                }\n            });\n            documents = asset?.complianceDocuments || [];\n            break;\n        case \"DRIVER\":\n            asset = await _lib_db__WEBPACK_IMPORTED_MODULE_1__.prisma.driver.findUnique({\n                where: {\n                    id: assetId\n                }\n            });\n            documents = []; // Drivers don't have documents in the same way\n            break;\n        default:\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Invalid asset type\"\n            }, {\n                status: 400\n            });\n    }\n    if (!asset) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Asset not found\"\n        }, {\n            status: 404\n        });\n    }\n    // Calculate compliance for this specific asset\n    const singleAssetCompliance = (0,_lib_compliance_compliance_tracker__WEBPACK_IMPORTED_MODULE_2__.calculateComplianceStatus)(assetType === \"VEHICLE\" ? [\n        asset\n    ] : [], assetType === \"TRAILER\" ? [\n        asset\n    ] : [], assetType === \"DRIVER\" ? [\n        asset\n    ] : [], assetType !== \"DRIVER\" ? documents.map((d)=>({\n            ...d,\n            [assetType.toLowerCase()]: asset\n        })) : []);\n    if (!detailed) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            assetId,\n            assetType,\n            assetName: assetType === \"DRIVER\" ? `${asset.firstName} ${asset.lastName}` : assetType === \"VEHICLE\" ? `${asset.make} ${asset.model} (${asset.licensePlate})` : `${asset.type} Trailer (${asset.serialNumber})`,\n            compliance: singleAssetCompliance\n        });\n    }\n    // Add detailed provincial requirements validation\n    let provincialValidation = [];\n    if (assetType !== \"DRIVER\" && asset.province) {\n        provincialValidation = (0,_lib_compliance_compliance_tracker__WEBPACK_IMPORTED_MODULE_2__.validateProvincialRequirements)(asset.province, assetType, documents);\n    }\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n        assetId,\n        assetType,\n        assetName: assetType === \"DRIVER\" ? `${asset.firstName} ${asset.lastName}` : assetType === \"VEHICLE\" ? `${asset.make} ${asset.model} (${asset.licensePlate})` : `${asset.type} Trailer (${asset.serialNumber})`,\n        compliance: singleAssetCompliance,\n        detailed: {\n            asset,\n            documents,\n            provincialValidation,\n            province: asset.province\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/compliance/status/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/compliance/compliance-tracker.ts":
/*!**********************************************!*\
  !*** ./lib/compliance/compliance-tracker.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PROVINCIAL_REQUIREMENTS: () => (/* binding */ PROVINCIAL_REQUIREMENTS),\n/* harmony export */   calculateComplianceStatus: () => (/* binding */ calculateComplianceStatus),\n/* harmony export */   calculateDaysUntilExpiry: () => (/* binding */ calculateDaysUntilExpiry),\n/* harmony export */   generateDocumentRenewals: () => (/* binding */ generateDocumentRenewals),\n/* harmony export */   generateDriverLicenseRenewals: () => (/* binding */ generateDriverLicenseRenewals),\n/* harmony export */   getComplianceStatus: () => (/* binding */ getComplianceStatus),\n/* harmony export */   getPriorityLevel: () => (/* binding */ getPriorityLevel),\n/* harmony export */   getRenewalTimeline: () => (/* binding */ getRenewalTimeline),\n/* harmony export */   validateProvincialRequirements: () => (/* binding */ validateProvincialRequirements)\n/* harmony export */ });\n// Provincial compliance requirements for Canadian provinces\nconst PROVINCIAL_REQUIREMENTS = {\n    \"ON\": [\n        {\n            province: \"Ontario\",\n            requirement: \"Vehicle Registration\",\n            documentType: \"REGISTRATION\",\n            renewalPeriod: 12,\n            warningPeriods: [\n                90,\n                60,\n                30,\n                14,\n                7,\n                3,\n                1\n            ],\n            isMandatory: true\n        },\n        {\n            province: \"Ontario\",\n            requirement: \"Commercial Vehicle Insurance\",\n            documentType: \"INSURANCE\",\n            renewalPeriod: 12,\n            warningPeriods: [\n                90,\n                60,\n                30,\n                14,\n                7,\n                3,\n                1\n            ],\n            isMandatory: true\n        },\n        {\n            province: \"Ontario\",\n            requirement: \"Commercial Vehicle Safety Inspection\",\n            documentType: \"INSPECTION\",\n            renewalPeriod: 12,\n            warningPeriods: [\n                90,\n                60,\n                30,\n                14,\n                7,\n                3,\n                1\n            ],\n            isMandatory: true\n        },\n        {\n            province: \"Ontario\",\n            requirement: \"Commercial Vehicle Permit\",\n            documentType: \"COMMERCIAL_PERMIT\",\n            renewalPeriod: 12,\n            warningPeriods: [\n                90,\n                60,\n                30,\n                14,\n                7,\n                3,\n                1\n            ],\n            isMandatory: true\n        }\n    ],\n    \"AB\": [\n        {\n            province: \"Alberta\",\n            requirement: \"Vehicle Registration\",\n            documentType: \"REGISTRATION\",\n            renewalPeriod: 12,\n            warningPeriods: [\n                90,\n                60,\n                30,\n                14,\n                7,\n                3,\n                1\n            ],\n            isMandatory: true\n        },\n        {\n            province: \"Alberta\",\n            requirement: \"Commercial Vehicle Insurance\",\n            documentType: \"INSURANCE\",\n            renewalPeriod: 12,\n            warningPeriods: [\n                90,\n                60,\n                30,\n                14,\n                7,\n                3,\n                1\n            ],\n            isMandatory: true\n        },\n        {\n            province: \"Alberta\",\n            requirement: \"Commercial Vehicle Safety Inspection\",\n            documentType: \"INSPECTION\",\n            renewalPeriod: 6,\n            warningPeriods: [\n                90,\n                60,\n                30,\n                14,\n                7,\n                3,\n                1\n            ],\n            isMandatory: true\n        }\n    ],\n    \"BC\": [\n        {\n            province: \"British Columbia\",\n            requirement: \"Vehicle Registration\",\n            documentType: \"REGISTRATION\",\n            renewalPeriod: 12,\n            warningPeriods: [\n                90,\n                60,\n                30,\n                14,\n                7,\n                3,\n                1\n            ],\n            isMandatory: true\n        },\n        {\n            province: \"British Columbia\",\n            requirement: \"Commercial Vehicle Insurance\",\n            documentType: \"INSURANCE\",\n            renewalPeriod: 12,\n            warningPeriods: [\n                90,\n                60,\n                30,\n                14,\n                7,\n                3,\n                1\n            ],\n            isMandatory: true\n        },\n        {\n            province: \"British Columbia\",\n            requirement: \"Commercial Vehicle Safety Inspection\",\n            documentType: \"INSPECTION\",\n            renewalPeriod: 12,\n            warningPeriods: [\n                90,\n                60,\n                30,\n                14,\n                7,\n                3,\n                1\n            ],\n            isMandatory: true\n        }\n    ]\n};\n/**\n * Calculate days until expiry with proper date handling\n */ function calculateDaysUntilExpiry(expiryDate) {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0); // Reset time to start of day\n    const expiry = new Date(expiryDate);\n    expiry.setHours(0, 0, 0, 0); // Reset time to start of day\n    const timeDiff = expiry.getTime() - today.getTime();\n    return Math.ceil(timeDiff / (1000 * 3600 * 24));\n}\n/**\n * Get compliance status based on days until expiry\n */ function getComplianceStatus(daysUntilExpiry) {\n    if (daysUntilExpiry <= 0) return \"red\"; // Expired\n    if (daysUntilExpiry <= 7) return \"red\"; // Critical - 7 days or less\n    if (daysUntilExpiry <= 30) return \"amber\"; // Warning - 30 days or less\n    return \"green\"; // Good - more than 30 days\n}\n/**\n * Get priority level based on days until expiry\n */ function getPriorityLevel(daysUntilExpiry) {\n    if (daysUntilExpiry <= 0) return \"CRITICAL\"; // Expired\n    if (daysUntilExpiry <= 3) return \"CRITICAL\"; // 3 days or less\n    if (daysUntilExpiry <= 7) return \"HIGH\"; // 7 days or less\n    if (daysUntilExpiry <= 14) return \"HIGH\"; // 14 days or less\n    if (daysUntilExpiry <= 30) return \"MEDIUM\"; // 30 days or less\n    return \"LOW\"; // More than 30 days\n}\n/**\n * Generate renewal alerts for documents\n */ function generateDocumentRenewals(documents) {\n    const alerts = [];\n    const today = new Date();\n    documents.forEach((doc)=>{\n        const daysUntilExpiry = calculateDaysUntilExpiry(doc.expiryDate);\n        const status = getComplianceStatus(daysUntilExpiry);\n        const priority = getPriorityLevel(daysUntilExpiry);\n        // Only create alerts for documents expiring within 90 days or already expired\n        if (daysUntilExpiry <= 90) {\n            let assetName = \"Unknown Asset\";\n            let assetType = \"VEHICLE\";\n            if (doc.vehicle) {\n                assetName = `${doc.vehicle.make} ${doc.vehicle.model} (${doc.vehicle.licensePlate})`;\n                assetType = \"VEHICLE\";\n            } else if (doc.trailer) {\n                assetName = `${doc.trailer.type} Trailer (${doc.trailer.serialNumber})`;\n                assetType = \"TRAILER\";\n            }\n            const docTypeDisplayName = doc.type.replace(\"_\", \" \").toLowerCase().replace(/\\b\\w/g, (l)=>l.toUpperCase());\n            alerts.push({\n                id: `doc-${doc.id}`,\n                type: \"DOCUMENT\",\n                title: `${docTypeDisplayName} Renewal Required`,\n                description: daysUntilExpiry <= 0 ? `${docTypeDisplayName} has expired` : `${docTypeDisplayName} expires in ${daysUntilExpiry} day${daysUntilExpiry === 1 ? \"\" : \"s\"}`,\n                assetType,\n                assetId: doc.vehicleId || doc.trailerId || \"\",\n                assetName,\n                expiryDate: doc.expiryDate,\n                daysUntilExpiry,\n                priority,\n                status,\n                actionRequired: daysUntilExpiry <= 0 ? \"Renew immediately - asset may be out of compliance\" : `Schedule renewal for ${docTypeDisplayName}`,\n                documentId: doc.id\n            });\n        }\n    });\n    return alerts.sort((a, b)=>a.daysUntilExpiry - b.daysUntilExpiry);\n}\n/**\n * Generate renewal alerts for driver licenses\n */ function generateDriverLicenseRenewals(drivers) {\n    const alerts = [];\n    drivers.filter((driver)=>driver.status === \"ACTIVE\").forEach((driver)=>{\n        const daysUntilExpiry = calculateDaysUntilExpiry(driver.licenseExpiry);\n        const status = getComplianceStatus(daysUntilExpiry);\n        const priority = getPriorityLevel(daysUntilExpiry);\n        // Only create alerts for licenses expiring within 90 days or already expired\n        if (daysUntilExpiry <= 90) {\n            alerts.push({\n                id: `license-${driver.id}`,\n                type: \"LICENSE\",\n                title: \"Driver License Renewal Required\",\n                description: daysUntilExpiry <= 0 ? `Driver license has expired` : `Driver license expires in ${daysUntilExpiry} day${daysUntilExpiry === 1 ? \"\" : \"s\"}`,\n                assetType: \"DRIVER\",\n                assetId: driver.id,\n                assetName: `${driver.firstName} ${driver.lastName} (${driver.employeeId})`,\n                expiryDate: driver.licenseExpiry,\n                daysUntilExpiry,\n                priority,\n                status,\n                actionRequired: daysUntilExpiry <= 0 ? \"Driver must renew license immediately - cannot operate vehicles\" : \"Schedule license renewal appointment\"\n            });\n        }\n    });\n    return alerts.sort((a, b)=>a.daysUntilExpiry - b.daysUntilExpiry);\n}\n/**\n * Calculate overall compliance status for fleet\n */ function calculateComplianceStatus(vehicles, trailers, drivers, documents) {\n    const allRenewals = [\n        ...generateDocumentRenewals(documents),\n        ...generateDriverLicenseRenewals(drivers)\n    ];\n    const totalAssets = vehicles.length + trailers.length + drivers.filter((d)=>d.status === \"ACTIVE\").length;\n    // Count assets by compliance status\n    const assetCompliance = new Map();\n    // Initialize all assets as compliant\n    vehicles.forEach((v)=>assetCompliance.set(`vehicle-${v.id}`, \"green\"));\n    trailers.forEach((t)=>assetCompliance.set(`trailer-${t.id}`, \"green\"));\n    drivers.filter((d)=>d.status === \"ACTIVE\").forEach((d)=>assetCompliance.set(`driver-${d.id}`, \"green\"));\n    // Update status based on renewals\n    allRenewals.forEach((renewal)=>{\n        const assetKey = `${renewal.assetType.toLowerCase()}-${renewal.assetId}`;\n        const currentStatus = assetCompliance.get(assetKey) || \"green\";\n        // Only update if new status is worse\n        if (renewal.status === \"red\" || renewal.status === \"amber\" && currentStatus === \"green\") {\n            assetCompliance.set(assetKey, renewal.status);\n        }\n    });\n    const compliantAssets = Array.from(assetCompliance.values()).filter((status)=>status === \"green\").length;\n    const warningAssets = Array.from(assetCompliance.values()).filter((status)=>status === \"amber\").length;\n    const criticalAssets = Array.from(assetCompliance.values()).filter((status)=>status === \"red\").length;\n    const expiredDocuments = allRenewals.filter((r)=>r.daysUntilExpiry <= 0).length;\n    const expiringDocuments = allRenewals.filter((r)=>r.daysUntilExpiry > 0 && r.daysUntilExpiry <= 30).length;\n    let overall;\n    if (criticalAssets > 0) {\n        overall = \"CRITICAL\";\n    } else if (warningAssets > 0) {\n        overall = \"WARNING\";\n    } else {\n        overall = \"COMPLIANT\";\n    }\n    return {\n        overall,\n        totalAssets,\n        compliantAssets,\n        warningAssets,\n        criticalAssets,\n        expiringDocuments,\n        expiredDocuments,\n        upcomingRenewals: allRenewals\n    };\n}\n/**\n * Validate provincial requirements for a vehicle/trailer\n */ function validateProvincialRequirements(province, assetType, documents) {\n    const requirements = PROVINCIAL_REQUIREMENTS[province] || [];\n    return requirements.map((requirement)=>{\n        const matchingDocs = documents.filter((doc)=>doc.type === requirement.documentType && calculateDaysUntilExpiry(doc.expiryDate) > 0);\n        const validDocument = matchingDocs.length > 0 ? matchingDocs[0] : undefined;\n        return {\n            requirement,\n            hasValidDocument: validDocument !== undefined,\n            document: validDocument\n        };\n    });\n}\n/**\n * Get renewal timeline for planning purposes\n */ function getRenewalTimeline(documents, drivers) {\n    const allRenewals = [\n        ...generateDocumentRenewals(documents),\n        ...generateDriverLicenseRenewals(drivers)\n    ];\n    // Group renewals by month for next 12 months\n    const timeline = [];\n    const today = new Date();\n    for(let i = 0; i < 12; i++){\n        const monthDate = new Date(today.getFullYear(), today.getMonth() + i, 1);\n        const monthName = monthDate.toLocaleDateString(\"en-CA\", {\n            year: \"numeric\",\n            month: \"long\"\n        });\n        const monthRenewals = allRenewals.filter((renewal)=>{\n            const renewalDate = new Date(renewal.expiryDate);\n            return renewalDate.getMonth() === monthDate.getMonth() && renewalDate.getFullYear() === monthDate.getFullYear();\n        });\n        timeline.push({\n            month: monthName,\n            renewals: monthRenewals\n        });\n    }\n    return timeline;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/compliance/compliance-tracker.ts\n");

/***/ }),

/***/ "(rsc)/./lib/db.ts":
/*!*******************!*\
  !*** ./lib/db.ts ***!
  \*******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   prisma: () => (/* binding */ prisma)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\n// Use mock data in development if database is not available\nconst globalForPrisma = global;\nconst prisma = globalForPrisma.prisma || new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient({\n    log:  true ? [\n        \"error\",\n        \"warn\"\n    ] : 0\n});\nif (true) {\n    globalForPrisma.prisma = prisma;\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (prisma);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvZGIudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUE2QztBQU03Qyw0REFBNEQ7QUFDNUQsTUFBTUMsa0JBQWtCQztBQUVqQixNQUFNQyxTQUFTRixnQkFBZ0JFLE1BQU0sSUFBSSxJQUFJSCx3REFBWUEsQ0FBQztJQUMvREksS0FBS0MsS0FBeUIsR0FBZ0I7UUFBQztRQUFTO0tBQU8sR0FBRyxDQUFTO0FBQzdFLEdBQUU7QUFFRixJQUFJQSxJQUF5QixFQUFjO0lBQ3pDSixnQkFBZ0JFLE1BQU0sR0FBR0E7QUFDM0I7QUFFQSxpRUFBZUEsTUFBTUEsRUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL2FwcC8uL2xpYi9kYi50cz8xZGYwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFByaXNtYUNsaWVudCB9IGZyb20gJ0BwcmlzbWEvY2xpZW50J1xuXG5kZWNsYXJlIGdsb2JhbCB7XG4gIHZhciBwcmlzbWE6IFByaXNtYUNsaWVudCB8IHVuZGVmaW5lZFxufVxuXG4vLyBVc2UgbW9jayBkYXRhIGluIGRldmVsb3BtZW50IGlmIGRhdGFiYXNlIGlzIG5vdCBhdmFpbGFibGVcbmNvbnN0IGdsb2JhbEZvclByaXNtYSA9IGdsb2JhbCBhcyB1bmtub3duIGFzIHsgcHJpc21hOiBQcmlzbWFDbGllbnQgfVxuXG5leHBvcnQgY29uc3QgcHJpc21hID0gZ2xvYmFsRm9yUHJpc21hLnByaXNtYSB8fCBuZXcgUHJpc21hQ2xpZW50KHtcbiAgbG9nOiBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50JyA/IFsnZXJyb3InLCAnd2FybiddIDogWydlcnJvciddLFxufSlcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgZ2xvYmFsRm9yUHJpc21hLnByaXNtYSA9IHByaXNtYVxufVxuXG5leHBvcnQgZGVmYXVsdCBwcmlzbWEiXSwibmFtZXMiOlsiUHJpc21hQ2xpZW50IiwiZ2xvYmFsRm9yUHJpc21hIiwiZ2xvYmFsIiwicHJpc21hIiwibG9nIiwicHJvY2VzcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./lib/db.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcompliance%2Fstatus%2Froute&page=%2Fapi%2Fcompliance%2Fstatus%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcompliance%2Fstatus%2Froute.ts&appDir=C%3A%5CUsers%5Crdear%5CDownloads%5Cice_fleet_platform%5Capp%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Crdear%5CDownloads%5Cice_fleet_platform%5Capp&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();